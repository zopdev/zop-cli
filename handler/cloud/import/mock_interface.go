// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go
//
// Generated by this command:
//
//	mockgen -source=interface.go -destination=mock_interface.go -package=_import
//

// Package _import is a generated GoMock package.
package _import

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gofr "gofr.dev/pkg/gofr"
)

// MockAccountImporter is a mock of AccountImporter interface.
type MockAccountImporter struct {
	ctrl     *gomock.Controller
	recorder *MockAccountImporterMockRecorder
	isgomock struct{}
}

// MockAccountImporterMockRecorder is the mock recorder for MockAccountImporter.
type MockAccountImporterMockRecorder struct {
	mock *MockAccountImporter
}

// NewMockAccountImporter creates a new mock instance.
func NewMockAccountImporter(ctrl *gomock.Controller) *MockAccountImporter {
	mock := &MockAccountImporter{ctrl: ctrl}
	mock.recorder = &MockAccountImporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountImporter) EXPECT() *MockAccountImporterMockRecorder {
	return m.recorder
}

// PostAccounts mocks base method.
func (m *MockAccountImporter) PostAccounts(ctx *gofr.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostAccounts", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostAccounts indicates an expected call of PostAccounts.
func (mr *MockAccountImporterMockRecorder) PostAccounts(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostAccounts", reflect.TypeOf((*MockAccountImporter)(nil).PostAccounts), ctx)
}
